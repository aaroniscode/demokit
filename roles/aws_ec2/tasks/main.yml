---
- name: generate ec2/subnet filter
  set_fact:
    aws_ec2_tags_formatted: >
      {{ aws_ec2_tags_formatted | default({}) | combine(
          { 'tag:' + item.key: item.value }
        )
      }}
  loop_control:
    label: "{{ item.key + ':' + item.value }}"
  with_dict: "{{ aws_ec2_tags }}"

- name: find existing ec2 instances
  ec2_instance_facts:
    filters: >-
      {% if aws_ec2_limit_tag -%}
        {{
          aws_ec2_tags_formatted | combine( { 'tag:' + aws_ec2_limit_tag: ''} )
        }}
      {% else -%}
        {{ aws_ec2_tags_formatted }}
      {% endif -%}
    profile: "{{ aws_ec2_profile }}"
    region: "{{ aws_ec2_region }}"
  when: aws_ec2_state != 'running'
  register: find_ec2

- include_tasks: "{{ aws_ec2_state }}.yml"
