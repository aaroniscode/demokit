---
- name: generate letsencrypt account key
  openssl_privatekey:
    path: "{{ aws_certs_path }}/letsencrypt_account.pem"
    size: 4096

- name: generate certificate list
  set_fact:
    cert_list: >
      {{
        cert_list | default([]) +
        [
          item + '.' + aws_route53_domain
        ]
      }}
  loop: "{{ aws_route53_letsencrypt }}"

- name: create certificate directories
  file:
    path: "{{ aws_certs_path }}/{{ item }}"
    state: directory
  loop: "{{ cert_list }}"

- name: generate certificate private keys
  openssl_privatekey:
    path: "{{ aws_certs_path }}/{{ item }}/key.pem"
    size: 4096
  loop: "{{ cert_list }}"

- name: generate certificate signing requests
  openssl_csr:
    path: "{{ aws_certs_path }}/{{ item }}.csr"
    privatekey_path: "{{ aws_certs_path }}/{{ item }}/key.pem"
    common_name: "{{ item }}"
  loop: "{{ cert_list }}"

- name: initiate letsencrypt challenge
  letsencrypt:
    account_key: "{{ aws_certs_path }}/letsencrypt_account.pem"
    acme_directory: https://acme-v01.api.letsencrypt.org/directory
    challenge: dns-01
    cert: "{{ aws_certs_path }}/{{ item }}/cert.pem"
    csr: "{{ aws_certs_path }}/{{ item }}.csr"
  loop: "{{ cert_list }}"
  register: le_challenge

- name: create TXT records to satisfy challenge
  route53:
    overwrite: yes
    profile: "{{ aws_route53_profile }}"
    record: >-
      {{
        item.challenge_data[item.item]['dns-01'].record
      }}
    state: present
    type: TXT
    ttl: "{{ aws_route53_ttl }}"
    value: >-
      {{
        '"' + item.challenge_data[item.item]['dns-01'].resource_value + '"'
      }}
    wait: true
    zone: "{{ aws_route53_domain }}"
  async: 300
  loop: "{{ le_challenge.results }}"
  loop_control:
    label: "{{ item.item }}"
  poll: 0
  register: route53_async
  when: item is changed

- name: wait for route53 records to replicate
  async_status:
    jid: "{{ item.ansible_job_id }}"
  loop: "{{ route53_async.results }}"
  loop_control:
    label: "{{ item.item.item }}"
  register: route53
  retries: 300
  until: route53.finished
  when: item is changed

- name: validate the challenge and retrieve the certficates
  letsencrypt:
    account_key: "{{ aws_certs_path }}/letsencrypt_account.pem"
    acme_directory: https://acme-v01.api.letsencrypt.org/directory
    challenge: dns-01
    cert: "{{ aws_certs_path }}/{{ item.item }}/cert.pem"
    chain: "{{ aws_certs_path }}/{{ item.item }}/ca.pem"
    csr: "{{ aws_certs_path }}/{{ item.item }}.csr"
    data: "{{ item }}"
  loop: "{{ le_challenge.results }}"
  loop_control:
    label: "{{ item.item }}"
  when: item is changed
