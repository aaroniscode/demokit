---
#
##
###
#### Ansible Settings
###
##
#

# Ansible will use this key file to SSH into hosts and configure
# Must pair the aws_key_public_key_file below
ansible_ssh_private_key_file: ~/.ssh/aws_ansible.pem

#
##
###
#### AWS Settings
###
##
#

# Instances are dynamically created using playbooks in aws directory
# Supported Operatings Systems (with tag that is automatically added)
# - ubuntu_1604 (ubuntu)
# - windows_server_2016 (windows)
aws_ec2:
  ucp:
    count: 1
    instance: t2.medium
    os: ubuntu_1604
    security_groups:
      - default
      - k8s_api
      - ssh
    tags:
      - manager_nodes
  dtr:
    count: 1
    instance: t2.medium
    os: ubuntu_1604
    security_groups:
      - default
      - ssh
    tags:
      - registry_nodes
      - worker_nodes
  linux:
    instance: t2.micro
    count: 3
    os: ubuntu_1604
    security_groups:
      - default
      - ssh
    tags:
      - worker_nodes
  windows:
    instance: t2.medium
    os: windows_server_2016
    count: 2
    security_groups:
      - default
      - rdp
      - winrm
    tags:
      - worker_nodes

# AWS key pair requires a unique name in a region
aws_key_name: "{{ aws_tags.Owner }}"

# AWS key pair can be created dynamically by public key that matches private key above
aws_key_public_key_file: ~/.ssh/aws_ansible.pub

# Default AWS profile and region to use for all AWS resources
aws_profile: default
aws_region: us-east-1

# Domain name to assign to aws_ec2 hosts
aws_route53_domain: example.com

# Uncomment and set if you have a separate AWS account managing route53
#aws_route53_profile: personal

# Security groups will be dynamically created and updated
# Apply the groups to the aws_ec2 dictionary above
aws_security_groups:
  default:
    rules:
      - proto: all
        group_name: default
      - proto: tcp
        ports:
          - 443
        cidr_ip: 0.0.0.0/0
  k8s_api:
    rules:
      - proto: tcp
        ports:
          - 6443
        cidr_ip: 0.0.0.0/0
  rdp:
    rules:
      - proto: tcp
        ports:
          - 3389
        cidr_ip: 0.0.0.0/0
  ssh:
    rules:
      - proto: tcp
        ports:
          - 22
        cidr_ip: 0.0.0.0/0
  winrm:
    rules:
      - proto: tcp
        ports:
          - 5986
        cidr_ip: 0.0.0.0/0

# These tags are placed on every AWS resource to track ownership
# The same tags MUST be included in the ec2.ini dynamic inventory config file
aws_tags:
  Owner: your_username
  Environment: demokit

# After a Windows instance is launched, the Administrator password will be set to this
# The password must meet default Windows complexity requirements or it will fail to set!
aws_windows_admin_password: ChangeMePlease!

# Ansible identifies a VPC uniquely using name/CIDR
# Since VPC CIDRs can be duplicated, a unique name is required
aws_vpc_name: "{{ aws_tags.Owner + '-' + aws_tags.Environment }}"

#
##
###
#### Docker Settings
###
##
#

# Default is `password`
#ucp_password: password

# Default is `false`. Set to `true` to install a test version
# If installing a test version, set ucp_version as well
#ucp_test: true

# Required: URL of the host or URL of the load balancer in front of UCP
ucp_url: https://ucp1.{{ aws_route53_domain }}

# Default is `latest`
#ucp_version: 3.0.0

# Default is `stable-17.06`
#docker_ee_engine_linux_channel: test-17.06

# Default is null, which results in latest stable
# Can choose a channel or specific version
#docker_ee_engine_windows_version: test

# Required: File location is relative to location of docker_ee.yml playbook
# Copy your license file to demos/licenses to use the default
docker_ee_license_file: ../demos/licenses/docker_subscription.lic

# Required: Update the URL with your subscription uuid
docker_ee_url: "https://storebits.docker.com/ee/linux/sub-abcedf12-abcd-abcd-abcd-abcdef123456"

# Required If: ucp_test and/or dtr_test are set to `true`
#docker_login_username: your_username
#docker_login_email: your@email.com
#docker_login_password: your_password

# Default is `false`. Set to `true` to install a test version
#dtr_test: true

# Required: URL of the host or URL of the load balancer in front of DTR
dtr_url: https://dtr1.{{ aws_route53_domain }}

# Default is `latest`
#dtr_version: 2.5.0
